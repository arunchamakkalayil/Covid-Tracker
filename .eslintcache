[{"C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\World.js":"3","C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\India.js":"4","C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\Header.js":"5","C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\Statedata.js":"6"},{"size":393,"mtime":1607269843846,"results":"7","hashOfConfig":"8"},{"size":1087,"mtime":1607272186521,"results":"9","hashOfConfig":"8"},{"size":1955,"mtime":1607299764599,"results":"10","hashOfConfig":"8"},{"size":3359,"mtime":1607299383432,"results":"11","hashOfConfig":"8"},{"size":792,"mtime":1607299455067,"results":"12","hashOfConfig":"8"},{"size":4676,"mtime":1607299894022,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1do2fcb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\index.js",[],["30","31"],"C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\App.js",["32","33","34"],"import React, { Component, component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route \n} from 'react-router-dom';\nimport Header from './components/Header';\nimport World from './components/World';\nimport India from './components/India';\n\nclass App extends Component {\n\n                 constructor() {\n\n                     super();\n                              }\n\n                  render() {\n\n                return (\n\n                 <div className=\"container-fluid\">\n                   <Router>\n                     <Header/>\n                     <Switch>\n                       <Route exact path=\"/\">\n                         <India/>\n                       </Route>\n                       <Route path=\"/india\">\n                         <India/>\n                       </Route>\n                       <Route path=\"/world\">\n                         <World/>\n                       </Route>\n                     </Switch>\n                   </Router>\n       \n\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\World.js",["35"],"import React , {Component} from 'react';\r\nimport Axios from 'axios';\r\nclass World extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data : []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries\").then(response=>{\r\n            \r\n        this.setState({data:response.data});\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n\r\n                    <table className=\"table table-primary table-bordered table-hover table-sm\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Country</td>\r\n                                <td>Total Cases</td>\r\n                                <td>Recovered</td>\r\n                                <td>Death</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.data.map((itm,ky)=>{\r\n                                    return(\r\n                                        <tr>\r\n                                            <td>{itm.country}\r\n                                            <img style={{width:'64px',margimLeft:'10px',paddingLeft:'4px'}} src={itm.countryInfo.flag}/>\r\n                                            </td>\r\n                                            <td>{itm.cases}</td>\r\n                                            <td>{itm.recovered}</td>\r\n                                            <td>{itm.deaths}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n              \r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default World;","C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\India.js",["36"],"C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\Header.js",[],"C:\\Users\\pc\\Desktop\\COVID TRACKER\\src\\components\\Statedata.js",["37"],"\r\nimport React , {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {Card,Accordion,Button} from 'react-bootstrap';\r\n\r\nclass Statedata extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            stateData : {}\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        Axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response=>{\r\n           console.log( response.data)\r\n            this.setState({stateData:response.data});\r\n\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n             let keys = Object.keys(this.state.stateData);\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n\r\n                <Accordion>\r\n                    {\r\n                        keys.map((itm,ky)=>{\r\n\r\n                            let districts = this.state.stateData[itm].districtData;\r\n                            let district_keys = Object.keys(districts);\r\n\r\n                            let total_active = 0;\r\n                            let total_confirmed = 0;\r\n                            let total_deaths = 0;\r\n                            let total_recover = 0;\r\n\r\n                            let district_list = [];\r\n\r\n                            for( let x in districts){\r\n                                total_active += districts[x].active;\r\n                                total_confirmed += districts[x].confirmed;\r\n                                total_deaths += districts[x].deceased;\r\n                                total_recover += districts[x].recovered;\r\n                                let ob = districts[x];\r\n                                ob[\"district_name\"] = x;\r\n                                district_list.push(ob);\r\n                            }\r\n\r\n\r\n\r\n                            return(\r\n\r\n                                <Card>\r\n                                <Card.Header>\r\n                                  <Accordion.Toggle as={Button} variant=\"primary\" eventKey={ky}>\r\n                                  {itm} - <span className=\"btn-dark p-1 mr-2\"> Total Cases  {total_confirmed} </span> <span className=\"btn-dark p-1 mr-2\">  Active {total_active} </span> <span className=\"btn-dark p-1 mr-2\">  Recovered {total_recover} </span> <span className=\"btn-dark p-1 mr-2\"> Death {total_deaths}</span>\r\n                                  </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey={ky}>\r\n                                  <Card.Body>\r\n                                      <table className=\"table table-sm table-striped table-hover table-bordered\">\r\n                                          <thead>\r\n                                              <tr>\r\n                                              <td>Districts</td>\r\n                                              <td>Confirmed</td>\r\n                                              <td>Active</td>\r\n                                              <td>Recovered</td>\r\n                                              <td>Deaths</td>\r\n\r\n                                              </tr>\r\n                                          \r\n                                          </thead>\r\n                                          <tbody>\r\n                                              {\r\n                                                  district_list.map((itm,ky)=>{\r\n                                                      return(\r\n                                                          <tr>\r\n                                                              <td>{itm.district_name}</td>\r\n                                                              <td>{itm.confirmed}</td>\r\n                                                              <td>{itm.active}</td>\r\n                                                              <td>{itm.recovered}</td>\r\n                                                              <td>{itm.deceased}</td>\r\n                                                          </tr>\r\n                                                      )\r\n                                                  })\r\n                                              }\r\n\r\n                                          </tbody>\r\n                                      </table>\r\n                                  </Card.Body>\r\n                                </Accordion.Collapse>\r\n                              </Card>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n\r\n  \r\n</Accordion>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Statedata;\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":28,"nodeType":"44","messageId":"45","endLine":1,"endColumn":37},{"ruleId":"42","severity":1,"message":"46","line":5,"column":3,"nodeType":"44","messageId":"45","endLine":5,"endColumn":7},{"ruleId":"47","severity":1,"message":"48","line":15,"column":18,"nodeType":"49","messageId":"50","endLine":18,"endColumn":32},{"ruleId":"51","severity":1,"message":"52","line":40,"column":45,"nodeType":"53","endLine":40,"endColumn":137},{"ruleId":"51","severity":1,"message":"52","line":33,"column":17,"nodeType":"53","endLine":33,"endColumn":64},{"ruleId":"42","severity":1,"message":"54","line":36,"column":33,"nodeType":"44","messageId":"45","endLine":36,"endColumn":46},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'district_keys' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]